name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t myapp:latest .

      # Step 4: Log in to DockerHub
      - name: Log in to DockerHub
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      # Step 5: Push Docker image to DockerHub
      - name: Push Docker image to DockerHub
        run: docker tag myapp:latest ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest && docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: SSH into EC2 instance
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
            docker stop $(docker ps -q) || true
            docker run -d -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
